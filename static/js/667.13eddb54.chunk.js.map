{"version":3,"file":"static/js/667.13eddb54.chunk.js","mappings":"yBAKA,IAAIA,EAiBsBC,KAEhBC,UAAY,SAACC,GACrB,OAAQA,EAAMC,KAAKC,MACf,IAAK,SAnBX,SAAoBC,GAClB,IAAMC,EAAaD,EAAKC,WAClBC,GAAa,IAAIC,MAAOC,UAC9BV,EAAUW,aAAY,WACpB,IAAMC,EAAcC,KAAKC,QAAO,IAAIL,MAAOC,UAAYF,GAAa,KAEpEO,YADoBR,EAAaK,EAEnC,GAAG,IACL,CAYQI,CAAWb,EAAMC,KAAKE,MACtB,MACF,IAAK,OAXTW,cAAcjB,GAgBhB,C","sources":["worker/timer.worker.ts"],"sourcesContent":["//Avoid the browser throttle the timer if it's running in the background to conserve resources.\ninterface startTimerProps{\n  alarm_time: number;\n}\n\nlet timerId: NodeJS.Timeout;\n\nfunction startTimer(args: startTimerProps) {\n  const alarm_time = args.alarm_time;\n  const start_time = new Date().getTime();\n  timerId = setInterval(() => {\n    const time_passed = Math.floor((new Date().getTime() - start_time)/ 1000);\n    const time_remain = alarm_time - time_passed;\n    postMessage(time_remain); //time difference\n  }, 1000);\n}\n\nfunction stopTimer() {\n  clearInterval(timerId);\n}\n\n/* eslint-disable-next-line no-restricted-globals */\nconst webWorker: Worker = self as any;\n\nwebWorker.onmessage = (event: MessageEvent) => {\n  switch (event.data.type) {\n      case 'start':\n        startTimer(event.data.args);\n        break;\n      case 'stop':\n        stopTimer();\n        break;\n\n  }\n};\n\nexport {};"],"names":["timerId","self","onmessage","event","data","type","args","alarm_time","start_time","Date","getTime","setInterval","time_passed","Math","floor","postMessage","startTimer","clearInterval"],"sourceRoot":""}