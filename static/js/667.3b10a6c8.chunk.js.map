{"version":3,"file":"static/js/667.3b10a6c8.chunk.js","mappings":"yBAAA,IAAIA,EAcsBC,KAEhBC,UAAY,SAACC,GACrB,OAAQA,EAAMC,MACV,IAAK,SAhBX,WACE,IAAMC,GAAa,IAAIC,MAAOC,UAC9BP,EAAUQ,aAAY,WACpBC,YAAYC,KAAKC,QAAO,IAAIL,MAAOC,UAAYF,GAAa,KAC9D,GAAG,IACL,CAYQO,GACA,MACF,IAAK,OAXTC,cAAcb,GAgBhB,C","sources":["worker/timer.worker.ts"],"sourcesContent":["let timerId: NodeJS.Timeout;\n\nfunction startTimer() {\n  const start_time = new Date().getTime();\n  timerId = setInterval(() => {\n    postMessage(Math.floor((new Date().getTime() - start_time)/ 1000)); //time difference\n  }, 1000);\n}\n\nfunction stopTimer() {\n  clearInterval(timerId);\n}\n\n/* eslint-disable-next-line no-restricted-globals */\nconst webWorker: Worker = self as any;\n\nwebWorker.onmessage = (event: MessageEvent) => {\n  switch (event.data) {\n      case 'start':\n        startTimer();\n        break;\n      case 'stop':\n        stopTimer();\n        break;\n\n  }\n};\n\nexport {};"],"names":["timerId","self","onmessage","event","data","start_time","Date","getTime","setInterval","postMessage","Math","floor","startTimer","clearInterval"],"sourceRoot":""}